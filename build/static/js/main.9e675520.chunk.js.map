{"version":3,"sources":["components/Contact.js","components/Display.js","components/Filter.js","components/PersonForm.js","services/phonebook.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","props","name","number","onClick","handleDelete","id","Display","filteredNames","persons","showFilter","filter","person","toLowerCase","includes","map","Filter","value","onChange","PersonForm","updateNewName","newName","updateNewNumber","newNumber","type","handleClick","baseUrl","axios","get","then","response","data","newPersonObject","post","delete","newObject","put","Notification","message","errorMsg","className","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","statusMsg","setStatusMsg","setErrorMsg","useEffect","phonebookService","returnedPersons","event","target","preventDefault","newNameObject","result","find","p","window","confirm","changedPerson","setTimeout","catch","error","returnedPerson","copy","concat","modifiedPhonebook","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e675520.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        {props.name} {props.number}{\" \"}\r\n        <button\r\n          onClick={() => {\r\n            props.handleDelete(props.id, props.name);\r\n          }}\r\n        >\r\n          delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst Display = (props) => {\r\n  var filteredNames = props.persons;\r\n  if (props.showFilter) {\r\n    filteredNames = props.persons.filter((person) =>\r\n      person.name.toLowerCase().includes(props.showFilter.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {filteredNames.map((person) => (\r\n        <Contact\r\n          key={person.id}\r\n          name={person.name}\r\n          number={person.number}\r\n          id = {person.id}\r\n          handleDelete = {props.handleDelete}\r\n        ></Contact>\r\n        \r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n return(<div>\r\n     <p>filter shown with</p> \r\n     <input value={props.name} onChange={props.onChange}></input>\r\n </div>)\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div>\r\n          name: <input onChange={props.updateNewName} value={props.newName} />\r\n        </div>\r\n        <div>\r\n          number{\" \"}\r\n          <input\r\n            onChange={props.updateNewNumber}\r\n            value={props.newNumber}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={props.handleClick}>\r\n            add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newPersonObject) => {\r\n  const request = axios.post(baseUrl, newPersonObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteContact,\r\n  update,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, errorMsg }) => {\r\n  if (message === null  && errorMsg === null) {\r\n    return null;\r\n  }\r\n  if (errorMsg){\r\n      return(\r\n          <div className=\"error\"> {errorMsg}</div>\r\n      )\r\n  }\r\n\r\n  return <div className=\"statusNotification\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Display from \"./components/Display\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport phonebookService from \"./services/phonebook\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [statusMsg, setStatusMsg] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    phonebookService.getAll().then((returnedPersons) => {\n      setPersons(returnedPersons);\n    });\n  }, []);\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    const newNameObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // const copy = [...persons];\n    // const result = copy.filter((person) => person.name === newName);\n    const result = persons.find((p) => p.name === newName);\n\n    if (result) {\n      const r = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one? `\n      );\n      if (r === true) {\n        const changedPerson = { ...result, number: newNumber };\n        const id = result.id;\n        phonebookService\n          .update(id, changedPerson)\n          .then((response) => {\n            setStatusMsg(`Updated ${newName}`);\n            setTimeout(() => {\n              setStatusMsg(null);\n            }, 5000);\n            setPersons(\n              persons.map((person) => (person.id !== id ? person : response))\n            );\n          })\n          .catch((error) => {\n            setErrorMsg(\n              `Information of ${newName} has already been removed from the server`\n            );\n          });\n      }\n    } else {\n      phonebookService\n        .create(newNameObject)\n        .then((returnedPerson) => {\n          const copy = [...persons];\n          setPersons(copy.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setStatusMsg(`Added ${newName}`);\n          setTimeout(() => {\n            setStatusMsg(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          // console.log(error.response.data);\n          setErrorMsg(error.response.data.error);\n          setTimeout(() => {\n            setErrorMsg(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const updateNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const updateNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const setFilterText = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  // const filterName = () => {};\n  const handleDelete = (id, name) => {\n    const r = window.confirm(`Delete ${name} ?`);\n\n    if (r === true) {\n      phonebookService\n        .deleteContact(id)\n        .then((response) => {\n          const modifiedPhonebook = persons.filter(\n            (person) => person.id !== id\n          );\n          setPersons(modifiedPhonebook);\n        })\n        .catch((error) => {\n          setStatusMsg(\n            `Information of ${name} has already been removed from server`\n          );\n          setNewNumber(\"\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={statusMsg} errorMsg={errorMsg} />\n      <Filter name={newFilter} onChange={setFilterText}></Filter>\n      <PersonForm\n        updateNewName={updateNewName}\n        newName={newName}\n        updateNewNumber={updateNewNumber}\n        newNumber={newNumber}\n        handleClick={handleClick}\n      ></PersonForm>\n\n      <h2>Numbers</h2>\n      <Display\n        persons={persons}\n        showFilter={newFilter}\n        handleDelete={handleDelete}\n      ></Display>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}